forget *font.fth*   : *font.fth* ;

create base_chars
3 c, \ character ' ' added manually
%00000000 c,
%00000000 c,
%00000000 c,
%00000000 c,
%00000000 c,

1 c, \ character !
%00000001 c,
%00000001 c,
%00000001 c,
%00000000 c,
%00000001 c,
3 c, \ character "
%00000101 c,
%00000101 c,
%00000000 c,
%00000000 c,
%00000000 c,
4 c, \ character #
%00001010 c,
%00001111 c,
%00001010 c,
%00001111 c,
%00001010 c,
4 c, \ character $
%00000111 c,
%00001010 c,
%00000110 c,
%00000101 c,
%00001110 c,
4 c, \ character %
%00001100 c,
%00000001 c,
%00000110 c,
%00001000 c,
%00000011 c,
4 c, \ character &
%00000100 c,
%00001010 c,
%00000100 c,
%00001010 c,
%00000101 c,
1 c, \ character '
%00000001 c,
%00000001 c,
%00000000 c,
%00000000 c,
%00000000 c,
2 c, \ character (
%00000001 c,
%00000010 c,
%00000010 c,
%00000010 c,
%00000001 c,
2 c, \ character )
%00000010 c,
%00000001 c,
%00000001 c,
%00000001 c,
%00000010 c,
4 c, \ character *
%00001001 c,
%00000110 c,
%00001111 c,
%00000110 c,
%00001001 c,
3 c, \ character +
%00000000 c,
%00000010 c,
%00000111 c,
%00000010 c,
%00000000 c,
2 c, \ character ,
%00000000 c,
%00000000 c,
%00000000 c,
%00000001 c,
%00000010 c,
3 c, \ character -
%00000000 c,
%00000000 c,
%00000111 c,
%00000000 c,
%00000000 c,
1 c, \ character .
%00000000 c,
%00000000 c,
%00000000 c,
%00000000 c,
%00000001 c,
3 c, \ character /
%00000001 c,
%00000001 c,
%00000010 c,
%00000100 c,
%00000100 c,
4 c, \ character 0
%00000110 c,
%00001011 c,
%00001101 c,
%00001001 c,
%00000110 c,
2 c, \ character 1
%00000001 c,
%00000011 c,
%00000001 c,
%00000001 c,
%00000001 c,
4 c, \ character 2
%00000110 c,
%00001001 c,
%00000010 c,
%00000100 c,
%00001111 c,
4 c, \ character 3
%00001110 c,
%00000001 c,
%00000110 c,
%00000001 c,
%00001110 c,
4 c, \ character 4
%00001001 c,
%00001001 c,
%00001111 c,
%00000001 c,
%00000001 c,
4 c, \ character 5
%00001111 c,
%00001000 c,
%00001110 c,
%00000001 c,
%00001110 c,
4 c, \ character 6
%00000110 c,
%00001000 c,
%00001110 c,
%00001001 c,
%00000110 c,
4 c, \ character 7
%00001111 c,
%00000001 c,
%00000010 c,
%00000010 c,
%00000010 c,
4 c, \ character 8
%00000110 c,
%00001001 c,
%00000110 c,
%00001001 c,
%00000110 c,
4 c, \ character 9
%00000110 c,
%00001001 c,
%00000111 c,
%00000001 c,
%00000110 c,
1 c, \ character :
%00000000 c,
%00000001 c,
%00000000 c,
%00000001 c,
%00000000 c,
1 c, \ character ;
%00000000 c,
%00000001 c,
%00000000 c,
%00000001 c,
%00000001 c,
3 c, \ character <
%00000001 c,
%00000010 c,
%00000100 c,
%00000010 c,
%00000001 c,
3 c, \ character =
%00000000 c,
%00000111 c,
%00000000 c,
%00000111 c,
%00000000 c,
3 c, \ character >
%00000100 c,
%00000010 c,
%00000001 c,
%00000010 c,
%00000100 c,
3 c, \ character ?
%00000110 c,
%00000001 c,
%00000010 c,
%00000000 c,
%00000010 c,
4 c, \ character @
%00000110 c,
%00001001 c,
%00001011 c,
%00001000 c,
%00000111 c,

4 c, \ character A
%00000110 c,
%00001001 c,
%00001111 c,
%00001001 c,
%00001001 c,
4 c, \ character B
%00001110 c,
%00001001 c,
%00001110 c,
%00001001 c,
%00001110 c,
4 c, \ character C
%00000110 c,
%00001001 c,
%00001000 c,
%00001001 c,
%00000110 c,
4 c, \ character D
%00001110 c,
%00001001 c,
%00001001 c,
%00001001 c,
%00001110 c,
4 c, \ character E
%00001111 c,
%00001000 c,
%00001110 c,
%00001000 c,
%00001111 c,
4 c, \ character F
%00001111 c,
%00001000 c,
%00001110 c,
%00001000 c,
%00001000 c,
4 c, \ character G
%00000110 c,
%00001000 c,
%00001011 c,
%00001001 c,
%00000110 c,
4 c, \ character H
%00001001 c,
%00001001 c,
%00001111 c,
%00001001 c,
%00001001 c,
1 c, \ character I
%00000001 c,
%00000001 c,
%00000001 c,
%00000001 c,
%00000001 c,
4 c, \ character J
%00000001 c,
%00000001 c,
%00000001 c,
%00001001 c,
%00000110 c,
4 c, \ character K
%00001001 c,
%00001010 c,
%00001100 c,
%00001010 c,
%00001001 c,
4 c, \ character L
%00001000 c,
%00001000 c,
%00001000 c,
%00001000 c,
%00001111 c,
4 c, \ character M
%00001001 c,
%00001111 c,
%00001001 c,
%00001001 c,
%00001001 c,
4 c, \ character N
%00001001 c,
%00001101 c,
%00001011 c,
%00001001 c,
%00001001 c,
4 c, \ character O
%00000110 c,
%00001001 c,
%00001001 c,
%00001001 c,
%00000110 c,
4 c, \ character P
%00001110 c,
%00001001 c,
%00001110 c,
%00001000 c,
%00001000 c,
4 c, \ character Q
%00000110 c,
%00001001 c,
%00001001 c,
%00001011 c,
%00000111 c,
4 c, \ character R
%00001110 c,
%00001001 c,
%00001110 c,
%00001010 c,
%00001001 c,
4 c, \ character S
%00000111 c,
%00001000 c,
%00000110 c,
%00000001 c,
%00001110 c,
3 c, \ character T
%00000111 c,
%00000010 c,
%00000010 c,
%00000010 c,
%00000010 c,
4 c, \ character U
%00001001 c,
%00001001 c,
%00001001 c,
%00001001 c,
%00000110 c,
3 c, \ character V
%00000101 c,
%00000101 c,
%00000101 c,
%00000101 c,
%00000010 c,
4 c, \ character W
%00001001 c,
%00001001 c,
%00001001 c,
%00001111 c,
%00001001 c,
4 c, \ character X
%00001001 c,
%00001001 c,
%00000110 c,
%00001001 c,
%00001001 c,
3 c, \ character Y
%00000101 c,
%00000101 c,
%00000010 c,
%00000010 c,
%00000010 c,
4 c, \ character Z
%00001111 c,
%00000001 c,
%00000110 c,
%00001000 c,
%00001111 c,

2 c, \ character [
%00000011 c,
%00000010 c,
%00000010 c,
%00000010 c,
%00000011 c,
3 c, \ character \
%00000100 c,
%00000100 c,
%00000010 c,
%00000001 c,
%00000001 c,
2 c, \ character ]
%00000011 c,
%00000001 c,
%00000001 c,
%00000001 c,
%00000011 c,
3 c, \ character ^
%00000010 c,
%00000101 c,
%00000000 c,
%00000000 c,
%00000000 c,

5 c, \ character _ (added manually)
%00000000 c,
%00000000 c,
%00000000 c,
%00000000 c,
%00011111 c,

2 c, \ character `
%00000010 c,
%00000001 c,
%00000000 c,
%00000000 c,
%00000000 c,



create end_chars
3 c, \ character {
%00000011 c,
%00000010 c,
%00000110 c,
%00000010 c,
%00000011 c,
1 c, \ character |
%00000001 c,
%00000001 c,
%00000000 c,
%00000001 c,
%00000001 c,
3 c, \ character }
%00000110 c,
%00000010 c,
%00000011 c,
%00000010 c,
%00000110 c,

5 c, \ character ~ (added manually)
%00000000 c,
%00001000 c,
%00010101 c,
%00000010 c,
%00000000 c,

6 constant b/glyph

: >upper ( char -- CHAR )
  dup ` a ` z within if ` a - ` A + then
;

: glyph ( n -- addr )
  \ assumes ascii
  \ if outside
  dup 32 ` ~ within not if ` ? then
  >upper

  dup ` a < if
    32 - b/glyph * base_chars +
  else
    123 - b/glyph * end_chars +
  then
;



: list_glyph ( addr -- )
  b/glyph 0 do
    dup I + C@ .bin8 crlf
  loop
;
